trigger:
- main

variables:
  connectedServiceNameARM: '$(AZURE_SUBSCRIPTION)'
  repository: '_$(Build.Repository.Name)'
  storage: '$(CONTAINER_NAME)'
  sourceUrl: '$(SOURCE_URL)'

pool:
  vmImage: ubuntu-latest

stages:
  # Build Stage
  - stage: BuildAndTest
    jobs:
      - job: BuildAndTest
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '14.x'
          displayName: 'Install Node.js'

        - script: |
            npm install
            npm run build
          displayName: 'npm install and build'

        - task: CopyFiles@2
          displayName: 'copy files to: $(Build.ArtifactStagingDirectory)'
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/build'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: drop'
          inputs:
            PathtoPublish: '$(build.ArtifactStagingDirectory)'

    # Build Stage
  - stage: Preprocessing
    jobs:
      - job: PerformPreprocessing
        steps:

        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $url = "$($env:SOURCE_URL)"
              Write-Host "URL: $url"
              $pipeline = Invoke-RestMethod -Uri $url 
              Write-Host "Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"

     
